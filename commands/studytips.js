const { EmbedBuilder } = require('discord.js');

module.exports = {
    name: "tips",
    description: "Provides structured and effective study strategies for mastering a new language.",
    async execute(message) {
        const pages = [
            // Page 1: Introduction
            new EmbedBuilder()
                .setTitle("üåç Mastering a Language: Essential Study Tips")
                .setDescription(
                    "**Looking to improve your language learning approach?**\n\n" +
                    "This guide covers:\n" +
                    "üìå **Efficient Study Techniques**\n" +
                    "üìå **Speaking & Listening Strategies**\n" +
                    "üìå **Reading & Writing Methods**\n" +
                    "üìå **Memory Retention Techniques**\n" +
                    "üìå **How to Stay Motivated**\n\n" +
                    "[üìñ Click here for more resources](https://example.com/language-learning-resources)"
                )
                .setColor("#ACF508")
                .setFooter({ text: "Page 1/6 | Use ‚ñ∂Ô∏è to navigate" }),

            // Page 2: Effective Study Techniques
            new EmbedBuilder()
                .setTitle("üìö Effective Study Techniques")
                .setDescription(
                    "**1. Set SMART Goals:**\n" +
                    "   ‚Ä¢ Be specific: 'Learn 20 words daily' instead of 'Improve vocabulary'.\n" +
                    "   ‚Ä¢ Track progress weekly for measurable results.\n\n" +
                    "**2. Focus on Core Vocabulary:**\n" +
                    "   ‚Ä¢ Learn the most frequently used words and phrases first.\n\n" +
                    "**3. Immerse Yourself in the Language:**\n" +
                    "   ‚Ä¢ Change your surroundings‚Äîthink, write, and speak in the target language.\n" +
                    "   ‚Ä¢ Surround yourself with books, music, and conversations in that language."
                )
                .setColor("#ACF508")
                .setFooter({ text: "Page 2/6 | Use ‚óÄÔ∏è‚ñ∂Ô∏è to navigate" }),

            // Page 3: Speaking & Listening Strategies
            new EmbedBuilder()
                .setTitle("üó£Ô∏è Speaking & Listening Strategies")
                .setDescription(
                    "**Speaking Techniques:**\n" +
                    "‚úÖ Practice shadowing (repeat after native speakers).\n" +
                    "‚úÖ Read aloud to improve pronunciation and confidence.\n" +
                    "‚úÖ Think in your target language to improve fluency.\n\n" +
                    "**Listening Techniques:**\n" +
                    "üéß Listen to slow, clear speech (news, audiobooks, interviews).\n" +
                    "üéß Pay attention to sentence structures and common phrases.\n" +
                    "üéß Repeat phrases until they feel natural."
                )
                .setColor("#ACF508")
                .setFooter({ text: "Page 3/6 | Use ‚óÄÔ∏è‚ñ∂Ô∏è to navigate" }),

            // Page 4: Reading & Writing Methods
            new EmbedBuilder()
                .setTitle("üìñ Reading & Writing Methods")
                .setDescription(
                    "**Reading Techniques:**\n" +
                    "üìñ Start with simplified texts before moving to native materials.\n" +
                    "üìñ Read content that interests you‚Äîstories, news, or history.\n" +
                    "üìñ Avoid translating every word; focus on understanding context.\n\n" +
                    "**Writing Techniques:**\n" +
                    "‚úçÔ∏è Keep a language journal‚Äîwrite short daily entries.\n" +
                    "‚úçÔ∏è Copy well-written sentences to improve structure and vocabulary.\n" +
                    "‚úçÔ∏è Review and refine your writing regularly."
                )
                .setColor("#ACF508")
                .setFooter({ text: "Page 4/6 | Use ‚óÄÔ∏è‚ñ∂Ô∏è to navigate" }),

            // Page 5: Memory Retention Techniques
            new EmbedBuilder()
                .setTitle("üìù Memory Retention Techniques")
                .setDescription(
                    "**Enhance Retention with These Methods:**\n\n" +
                    "üß† **Spaced Repetition** ‚Äì Review material at increasing intervals.\n" +
                    "üß† **Mnemonic Devices** ‚Äì Associate words with vivid images or stories.\n" +
                    "üß† **Memory Palaces** ‚Äì Link vocabulary to familiar locations in your mind.\n\n" +
                    "**Note-taking Strategies:**\n" +
                    "üìå Use the **Cornell Method** to structure notes effectively.\n" +
                    "üìå Maintain a **personal phrasebook** with useful expressions.\n" +
                    "üìå Highlight key words in different colors to improve recall."
                )
                .setColor("#ACF508")
                .setFooter({ text: "Page 5/6 | Use ‚óÄÔ∏è‚ñ∂Ô∏è to navigate" }),

            // Page 6: Staying Motivated
            new EmbedBuilder()
                .setTitle("üî• Staying Motivated in Language Learning")
                .setDescription(
                    "üìå **Define Your Purpose:** Why do you want to learn this language?\n" +
                    "üìå **Make It Enjoyable:** Engage with content you love‚Äîbooks, music, movies.\n" +
                    "üìå **Join a Community:** Find conversation partners or study groups.\n" +
                    "üìå **Track Progress:** Maintain a log of achievements and milestones.\n" +
                    "üìå **Celebrate Small Wins:** Recognize and reward your improvements."
                )
                .setColor("#ACF508")
                .setFooter({ text: "Page 6/6 | Use ‚óÄÔ∏è to navigate" }),
        ];

        let currentPage = 0;
        const embedMessage = await message.channel.send({ embeds: [pages[currentPage]] });

        // Add reactions for navigation
        await embedMessage.react("‚óÄÔ∏è");
        await embedMessage.react("‚ñ∂Ô∏è");

        const filter = (reaction, user) => ["‚óÄÔ∏è", "‚ñ∂Ô∏è"].includes(reaction.emoji.name) && user.id === message.author.id;
        const collector = embedMessage.createReactionCollector({ filter, time: 60000 });

        collector.on("collect", async (reaction) => {
            if (reaction.emoji.name === "‚ñ∂Ô∏è") {
                currentPage = (currentPage + 1) % pages.length;
            } else if (reaction.emoji.name === "‚óÄÔ∏è") {
                currentPage = (currentPage - 1 + pages.length) % pages.length;
            }
            await embedMessage.edit({ embeds: [pages[currentPage]] });
            await reaction.users.remove(message.author.id); // Remove user reaction for a clean experience
        });
    },
};